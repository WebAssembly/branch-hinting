(module
  (type $0 (func (param i32)))
  (memory $0 1 1)
  (func $dummy)
  (func $0
    (type 0)
    (local i32)
    (local.get 1)
    (local.get 0)
    (i32.eq)
    (@metadata.code.branch_hint  "\00")
    (if (then (return)) (else))
    (return)
  )
  (func $1
    (type 0)
    (local i32)
    (local.get 1)
    (local.get 0)
    (i32.eq)
    (@metadata.code.branch_hint  "\01")
    (if (then (return)) (else))
    (return)
  )
  (func (export "nested") (param i32 i32) (result i32)
    (if (result i32) (local.get 0)
      (then
        (if (local.get 1) (then (call $dummy) (block) (nop)))
        (if (local.get 1) (then) (else (call $dummy) (block) (nop)))
        (@metadata.code.branch_hint  "\01")
        (if (result i32) (local.get 1)
          (then (call $dummy) (i32.const 9))
          (else (call $dummy) (i32.const 10))
        )
      )
      (else
        (@metadata.code.branch_hint  "\00")
        (if (local.get 1) (then (call $dummy) (block) (nop)))
        (if (local.get 1) (then) (else (call $dummy) (block) (nop)))
        (if (result i32) (local.get 1)
          (then (call $dummy) (i32.const 10))
          (else (call $dummy) (i32.const 11))
        )
      )
    )
  )
)
